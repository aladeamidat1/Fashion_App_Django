version: '3.8'

services:
  # MySQL Database
  mysql:
    image: mysql:8.0
    container_name: fashion_app_mysql
    restart: unless-stopped
    environment:
      MYSQL_DATABASE: fashion_app_db
      MYSQL_USER: fashion_user
      MYSQL_PASSWORD: fashion_password
      MYSQL_ROOT_PASSWORD: root_password
    ports:
      - \"3306:3306\"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./mysql/init:/docker-entrypoint-initdb.d
    networks:
      - fashion_network
    healthcheck:
      test: [\"CMD\", \"mysqladmin\", \"ping\", \"-h\", \"localhost\"]
      timeout: 20s
      retries: 10

  # Django Web Application
  web:
    build: .
    container_name: fashion_app_web
    restart: unless-stopped
    ports:
      - \"8000:8000\"
    environment:
      - DEBUG=False
      - DB_NAME=fashion_app_db
      - DB_USER=fashion_user
      - DB_PASSWORD=fashion_password
      - DB_HOST=mysql
      - DB_PORT=3306
      - SECRET_KEY=django-insecure-docker-key-change-in-production
    volumes:
      - ./media:/app/media
      - ./static:/app/static
    depends_on:
      mysql:
        condition: service_healthy
    networks:
      - fashion_network
    command: >
      sh -c \"uv run python manage.py migrate &&
             uv run python manage.py collectstatic --noinput &&
             uv run uvicorn fashion_app.asgi:application --host 0.0.0.0 --port 8000\"

  # NGINX Reverse Proxy (Optional)
  nginx:
    image: nginx:alpine
    container_name: fashion_app_nginx
    restart: unless-stopped
    ports:
      - \"80:80\"
      - \"443:443\"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/sites:/etc/nginx/sites-available
      - ./static:/var/www/static
      - ./media:/var/www/media
    depends_on:
      - web
    networks:
      - fashion_network

volumes:
  mysql_data:
    driver: local

networks:
  fashion_network:
    driver: bridge